rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /**
     * @description Enforces user-ownership for stores.
     * @path /users/{userId}/stores/{storeId}
     * @allow (create) User 'A' can create a store under /users/A/stores/someStore.
     * @allow (get, update, delete) User 'A' can get, update, or delete a store under /users/A/stores/someStore.
     * @deny (create) User 'B' cannot create a store under /users/A/stores/someStore.
     * @deny (get, update, delete) User 'B' cannot get, update, or delete a store under /users/A/stores/someStore.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/stores/{storeId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for products.
     * @path /users/{userId}/products/{productId}
     * @allow (create) User 'A' can create a product under /users/A/products/someProduct.
     * @allow (get, update, delete) User 'A' can get, update, or delete a product under /users/A/products/someProduct.
     * @deny (create) User 'B' cannot create a product under /users/A/products/someProduct.
     * @deny (get, update, delete) User 'B' cannot get, update, or delete a product under /users/A/products/someProduct.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/products/{productId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for categories.
     * @path /users/{userId}/categories/{categoryId}
     * @allow (create) User 'A' can create a category under /users/A/categories/someCategory.
     * @allow (get, update, delete) User 'A' can get, update, or delete a category under /users/A/categories/someCategory.
     * @deny (create) User 'B' cannot create a category under /users/A/categories/someCategory.
     * @deny (get, update, delete) User 'B' cannot get, update, or delete a category under /users/A/categories/someCategory.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/categories/{categoryId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for clients.
     * @path /users/{userId}/clients/{clientId}
     * @allow (create) User 'A' can create a client under /users/A/clients/someClient.
     * @allow (get, update, delete) User 'A' can get, update, or delete a client under /users/A/clients/someClient.
     * @deny (create) User 'B' cannot create a client under /users/A/clients/someClient.
     * @deny (get, update, delete) User 'B' cannot get, update, or delete a client under /users/A/clients/someClient.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/clients/{clientId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for invoices.
     * @path /users/{userId}/invoices/{invoiceId}
     * @allow (create) User 'A' can create an invoice under /users/A/invoices/someInvoice.
     * @allow (get, update, delete) User 'A' can get, update, or delete an invoice under /users/A/invoices/someInvoice.
     * @deny (create) User 'B' cannot create an invoice under /users/A/invoices/someInvoice.
     * @deny (get, update, or delete) User 'B' cannot get, update, or delete an invoice under /users/A/invoices/someInvoice.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/invoices/{invoiceId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for units.
     * @path /users/{userId}/units/{unitId}
     * @allow (create) User 'A' can create a unit under /users/A/units/someUnit.
     * @allow (get, update, delete) User 'A' can get, update, or delete a unit under /users/A/units/someUnit.
     * @deny (create) User 'B' cannot create a unit under /users/A/units/someUnit.
     * @deny (get, update, or delete) User 'B' cannot get, update, or delete a unit under /users/A/units/someUnit.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/units/{unitId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    /**
     * @description Enforces user-ownership for toolbar settings.
     * @path /users/{userId}/settings/toolbarPositions
     * @allow (create) User 'A' can create toolbar settings under /users/A/settings/toolbarPositions.
     * @allow (get, update, delete) User 'A' can get, update, or delete toolbar settings under /users/A/settings/toolbarPositions.
     * @deny (create) User 'B' cannot create toolbar settings under /users/A/settings/toolbarPositions.
     * @deny (get, update, or delete) User 'B' cannot get, update, or delete toolbar settings under /users/A/settings/toolbarPositions.
     * @principle Enforces document ownership for writes and restricts access to a user's own data tree.
     */
    match /users/{userId}/settings/toolbarPositions {
      allow get: if isOwner(userId);
      allow list: if false;
      allow create: if isOwner(userId);
      allow update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }
  }
}