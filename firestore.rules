rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    /**
     * @description Checks if the user is signed in.
     * @path N/A
     * @allow N/A
     * @deny N/A
     * @principle Authentication is required for all operations.
     */
    function isSignedIn() {
      return request.auth != null;
    }

    /**
     * @description Checks if the authenticated user ID matches the requested user ID.
     * @path N/A
     * @allow N/A
     * @deny N/A
     * @principle Enforces user-specific data access.
     */
    function isOwner(userId) {
      return isSignedIn() && request.auth.uid == userId;
    }

    /**
     * @description Checks if the authenticated user owns the existing document.
     * @path N/A
     * @allow N/A
     * @deny N/A
     * @principle Enforces ownership for data modification.
     */
    function isExistingOwner(userId) {
      return isSignedIn() && isOwner(userId) && resource != null;
    }
    
    /**
     * @description Grants access to user-specific store data.
     * @path /users/{userId}/stores/{storeId}
     * @allow (create) User with ID 'user123' creates a new store under /users/user123/stores/store456.
     * @allow (get) User with ID 'user123' reads the store document /users/user123/stores/store456.
     * @allow (update) User with ID 'user123' updates the store document /users/user123/stores/store456.
     * @allow (delete) User with ID 'user123' deletes the store document /users/user123/stores/store456.
     * @deny (create) User with ID 'user456' attempts to create a store under /users/user123/stores/store789.
     * @deny (get) User with ID 'user456' attempts to read the store document /users/user123/stores/store456.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/stores/{storeId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Grants access to user-specific product data.
     * @path /users/{userId}/products/{productId}
     * @allow (create) User with ID 'user123' creates a new product under /users/user123/products/prod456.
     * @allow (get) User with ID 'user123' reads the product document /users/user123/products/prod456.
     * @allow (update) User with ID 'user123' updates the product document /users/user123/products/prod456.
     * @allow (delete) User with ID 'user123' deletes the product document /users/user123/products/prod456.
     * @deny (create) User with ID 'user456' attempts to create a product under /users/user123/products/prod789.
     * @deny (get) User with ID 'user456' attempts to read the product document /users/user123/products/prod456.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/products/{productId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Grants access to user-specific category data.
     * @path /users/{userId}/categories/{categoryId}
     * @allow (create) User with ID 'user123' creates a new category under /users/user123/categories/cat456.
     * @allow (get) User with ID 'user123' reads the category document /users/user123/categories/cat456.
     * @allow (update) User with ID 'user123' updates the category document /users/user123/categories/cat456.
     * @allow (delete) User with ID 'user123' deletes the category document /users/user123/categories/cat456.
     * @deny (create) User with ID 'user456' attempts to create a category under /users/user123/categories/cat789.
     * @deny (get) User with ID 'user456' attempts to read the category document /users/user123/categories/cat456.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/categories/{categoryId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Grants access to user-specific client data.
     * @path /users/{userId}/clients/{clientId}
     * @allow (create) User with ID 'user123' creates a new client under /users/user123/clients/client456.
     * @allow (get) User with ID 'user123' reads the client document /users/user123/clients/client456.
     * @allow (update) User with ID 'user123' updates the client document /users/user123/clients/client456.
     * @allow (delete) User with ID 'user123' deletes the client document /users/user123/clients/client456.
     * @deny (create) User with ID 'user456' attempts to create a client under /users/user123/clients/client789.
     * @deny (get) User with ID 'user456' attempts to read the client document /users/user123/clients/client456.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/clients/{clientId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Grants access to user-specific invoice data.
     * @path /users/{userId}/invoices/{invoiceId}
     * @allow (create) User with ID 'user123' creates a new invoice under /users/user123/invoices/invoice456.
     * @allow (get) User with ID 'user123' reads the invoice document /users/user123/invoices/invoice456.
     * @allow (update) User with ID 'user123' updates the invoice document /users/user123/invoices/invoice456.
     * @allow (delete) User with ID 'user123' deletes the invoice document /users/user123/invoices/invoice456.
     * @deny (create) User with ID 'user456' attempts to create an invoice under /users/user123/invoices/invoice789.
     * @deny (get) User with ID 'user456' attempts to read the invoice document /users/user123/invoices/invoice456.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/invoices/{invoiceId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Grants access to user-specific unit data.
     * @path /users/{userId}/units/{unitId}
     * @allow (create) User with ID 'user123' creates a new unit under /users/user123/units/unit456.
     * @allow (get) User with ID 'user123' reads the unit document /users/user123/units/unit456.
     * @allow (update) User with ID 'user123' updates the unit document /users/user123/units/unit456.
     * @allow (delete) User with ID 'user123' deletes the unit document /users/user123/units/unit456.
     * @deny (create) User with ID 'user456' attempts to create a unit under /users/user123/units/unit789.
     * @deny (get) User with ID 'user456' attempts to read the unit document /users/user123/units/unit456.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/units/{unitId} {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }

    /**
     * @description Grants access to user-specific toolbar settings.
     * @path /users/{userId}/settings/toolbarPositions
     * @allow (create) User with ID 'user123' creates toolbar settings under /users/user123/settings/toolbarPositions.
     * @allow (get) User with ID 'user123' reads the toolbar settings document /users/user123/settings/toolbarPositions.
     * @allow (update) User with ID 'user123' updates the toolbar settings document /users/user123/settings/toolbarPositions.
     * @allow (delete) User with ID 'user123' deletes the toolbar settings document /users/user123/settings/toolbarPositions.
     * @deny (create) User with ID 'user456' attempts to create settings under /users/user123/settings/toolbarPositions.
     * @deny (get) User with ID 'user456' attempts to read the settings document /users/user123/settings/toolbarPositions.
     * @principle Enforces document ownership for writes.
     */
    match /users/{userId}/settings/toolbarPositions {
      allow get: if isOwner(userId);
      allow list: if isOwner(userId);
      allow create: if isOwner(userId);
      allow update: if isExistingOwner(userId);
      allow delete: if isExistingOwner(userId);
    }
  }
}