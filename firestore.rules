rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // --- Public read-only collections
    match /products/{productId} {
      allow read: if true;
      allow create: if isBatchWrite() || isStoreOwner(request.resource.data.storeId);
      allow update: if isSignedIn() && isStoreOwner(resource.data.storeId);
      allow delete: if isBatchWrite() || (isSignedIn() && isStoreOwner(resource.data.storeId));
    }
    match /categories/{categoryId} {
      allow read: if true;
      allow create: if isBatchWrite() || isStoreOwner(request.resource.data.storeId);
      allow update: if isSignedIn() && isStoreOwner(resource.data.storeId);
      allow delete: if isBatchWrite() || (isSignedIn() && isStoreOwner(resource.data.storeId));
    }

    // ----- Public stores collection -----
    match /stores/{storeId} {
      allow read: if true;
      allow create: if isBatchWrite() || (isSignedIn() && request.resource.data.ownerId == request.auth.uid);
      allow update: if isBatchWrite() || (isSignedIn() && resource.data.ownerId == request.auth.uid);
      allow delete: if isBatchWrite() || (isSignedIn() && resource.data.ownerId == request.auth.uid);
    }
    

    // ----- Users subcollections: only owner allowed -----
    match /users/{userId}/ {
      // Clients
      match /clients/{clientId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }

      // Invoices
      match /invoices/{invoiceId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }

      // Units
      match /units/{unitId} {
        allow read, write: if isSignedIn() && isOwner(userId);
      }

      // Settings (e.g. toolbarPositions)
      match /settings/{docId} {
          allow read, write: if isSignedIn() && isOwner(userId);
      }
    }
  }

  // ---------------- Helper functions ----------------

  function isSignedIn() {
    return request.auth != null;
  }

  function isOwner(userId) {
    return request.auth.uid == userId;
  }
  
  function isBatchWrite() {
    return request.method == 'write' && request.resource == null;
  }
  
  function isStoreOwner(storeId) {
    return request.auth.uid == get(/databases/$(database)/documents/stores/$(storeId)).data.ownerId;
  }
}
