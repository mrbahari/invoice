rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    
    function isBatchWrite() {
      return request.method == 'write' && request.resource == null;
    }
    
    function isStoreOwner(storeId) {
      return request.auth.uid == get(/databases/$(database)/documents/stores/$(storeId)).data.ownerId;
    }

    // Public collections (read-only for most users)
    match /products/{productId} {
      allow read: if true;
      allow create: if isSignedIn() && isStoreOwner(request.resource.data.storeId);
      allow update: if isSignedIn() && isStoreOwner(resource.data.storeId);
      allow delete: if isBatchWrite() || (isSignedIn() && isStoreOwner(resource.data.storeId));
    }

    match /categories/{categoryId} {
      allow read: if true;
      allow create: if isSignedIn() && isStoreOwner(request.resource.data.storeId);
      allow update: if isSignedIn() && isStoreOwner(resource.data.storeId);
      allow delete: if isBatchWrite() || (isSignedIn() && isStoreOwner(resource.data.storeId));
    }
    
    // User-specific collections (private)
    match /users/{userId}/{collection}/{docId} {
       allow read, write: if isSignedIn() && isOwner(userId);
       allow create: if isBatchWrite() || (isSignedIn() && isOwner(userId));
       allow delete: if isBatchWrite() || (isSignedIn() && isOwner(userId));
    }
    
    match /users/{userId}/settings/toolbarPositions {
       allow read: if isSignedIn() && isOwner(userId);
       allow write: if isBatchWrite() || (isSignedIn() && isOwner(userId));
    }
    
    // Stores collection (public read, restricted write)
    match /stores/{storeId} {
      allow read: if true;
      allow create: if isBatchWrite() || isSignedIn();
      allow update: if isBatchWrite() || isStoreOwner(storeId);
      allow delete: if isBatchWrite() || isStoreOwner(storeId);
    }
  }
}
